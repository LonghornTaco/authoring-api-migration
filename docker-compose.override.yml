version: "3.9"

services:
  traefik:
    volumes:
      - ./docker/traefik:C:/etc/traefik
  mssql:
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ${LOCAL_DATA_PATH}\mssql:c:\data
    networks:
      authoring-api-net:
        aliases:
          - local-jss.authoring-api.sql
  solr:
    deploy:
      resources:
        limits:
          memory: 2G
  id:
    image: ${COMPOSE_PROJECT_NAME}-id:${VERSION:-latest} 
    build:
      context: ./docker/build/id
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-id7:${SITECORE_VERSION}
    environment:
      Sitecore_Sitecore__IdentityServer__Clients__CliServerClient__ClientSecrets__ClientSecret1: ${CLI_IDSECRET}
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
    volumes:
      - ${LOCAL_DEPLOY_PATH}/id:C:\deploy
      - ${LOCAL_LOG_PATH}/id:c:\Identity\logs
      - ${LICENSE_PATH}:C:\license:ro
    restart: always
    networks:
      authoring-api-net:
        aliases:
          - ${ID_HOST}
  cd:
    image: ${COMPOSE_PROJECT_NAME}-cd:${VERSION:-latest} 
    scale: 0 
    build:
      context: ./docker/build/cd
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-cd:${SITECORE_VERSION}
        SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sitecore-sxa-xm1-assets:${SXA_ASSETS_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
        HEADLESS_IMAGE: ${SITECORE_MODULE_REGISTRY}sitecore-headless-services-xm1-assets:${HEADLESS_VERSION}
    volumes:
      - ${LOCAL_DEPLOY_PATH}\cm\:C:\deploy\
      - ${LOCAL_LOG_PATH}\cd\:C:\inetpub\wwwroot\App_Data\logs\
      - ${LICENSE_PATH}:C:\license:ro
    environment:
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,HttpErrorsDetailed,DebugOn,DiagnosticsOff,InitMessagesOff,RobotDetectionOff
    entrypoint: powershell -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1"
    networks:
      authoring-api-net:
        aliases:
          - ${CD_HOST}
    ports:
      - 8082:80
  cm:
    image: ${COMPOSE_PROJECT_NAME}-cm:${VERSION:-latest}  
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 6G
    build:
      context: ./docker/build/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-cm:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}sitecore-spe-assets:${SPE_VERSION}
        SXA_IMAGE: ${SITECORE_MODULE_REGISTRY}sitecore-sxa-xm1-assets:${SXA_ASSETS_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
        HEADLESS_IMAGE: ${SITECORE_MODULE_REGISTRY}sitecore-headless-services-xm1-assets:${HEADLESS_VERSION}
        NODEJS_VERSION: ${NODEJS_VERSION}
        MANAGEMENT_SERVICES_IMAGE: ${SITECORE_MODULE_REGISTRY}sitecore-management-services-xm1-assets:${MANAGEMENT_SERVICES_VERSION}
    volumes:
      - ${LOCAL_DEPLOY_PATH}\cm\:C:\deploy\
      - ${LOCAL_LOG_PATH}\cm\:C:\inetpub\wwwroot\App_Data\logs\
      - ${LICENSE_PATH}:C:\license:ro
    environment:
      SITECORE_LICENSE_LOCATION: C:\license\license.xml
      RENDERING_HOST_INTERNAL_URI: "${RENDERING_HOST_INTERNAL}"
      JSS_DEPLOYMENT_SECRET_xmcloudpreview: ${JSS_DEPLOYMENT_SECRET}
      SITECORE_JSS_EDITING_SECRET: ${JSS_EDITING_SECRET}
      SITECORE_EDITING_HOST_PUBLIC_HOST: "${RENDERING_HOST}"
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,HttpErrorsDetailed,DebugOn,DiagnosticsOff,InitMessagesOff,RobotDetectionOff
    entrypoint: powershell -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1"
    networks:
      authoring-api-net:
        aliases:
          - ${CM_HOST}
  hostswriter:
    image: rahnemann/windows-hosts-writer:${WHW_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-hostswriter
    volumes:
      - C:\windows\system32\drivers\etc\:C:\driversetc\
      - type: npipe
        source: '\\.\pipe\docker_engine\'
        target: '\\.\pipe\docker_engine\'
    environment:
      TERMINATION_MAP: cm,cd,id,rendering,netcoreapp:traefik
    networks:
      - authoring-api-net
  rendering:
    deploy:
      resources:
        limits:
          memory: 4G
    image: ${COMPOSE_PROJECT_NAME}-rendering:${VERSION:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}-rendering
    ports:
      - "3000:3000"
    build:
      context: ./docker/build/rendering-host
      target: ${BUILD_CONFIGURATION}
      args:
        PARENT_IMAGE: ${COMPOSE_PROJECT_NAME}-nodejs:${VERSION:-latest}
    volumes:
      - ${LOCAL_RENDERING_HOST_PATH}:C:\app
    environment:
      SITECORE_API_HOST: "http://cm"
      NEXTJS_DIST_DIR: ".next-container"
      PUBLIC_URL: "https://${RENDERING_HOST}"
      JSS_EDITING_SECRET: ${JSS_EDITING_SECRET}
      SITECORE_API_KEY: "${SITECORE_API_KEY}"
      DISABLE_SSG_FETCH: ${DISABLE_SSG_FETCH}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: https://${RENDERING_HOST}
      NEXT_PUBLIC_TEALIUM_ENVIRONMENT: dev
    networks:
      authoring-api-net:
        aliases:
          - ${RENDERING_HOST}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rendering-secure.entrypoints=websecure"
      - "traefik.http.routers.rendering-secure.rule=Host(`${RENDERING_HOST}`)"
      - "traefik.http.routers.rendering-secure.tls=true"
      # Customization to address CORS errors in EE
      - "traefik.http.middlewares.rendering-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.rendering-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.rendering-headers.headers.accesscontrolallowmethods=GET,POST,OPTIONS"
      - "traefik.http.middlewares.rendering-headers.headers.accesscontrolalloworiginlist=https://${CM_HOST}"
      - "traefik.http.routers.rendering-secure.middlewares=rendering-headers"
  netcoreapp:
    image: ${COMPOSE_PROJECT_NAME}-netcoreapp:${VERSION:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}-netcoreapp
    build:
      context: ./docker/build/netcoreapp
      args:
        BASE_IMAGE: mcr.microsoft.com/dotnet/aspnet:7.0
    volumes:
       - ${LOCAL_DEPLOY_PATH}\netcoreapp\:C:\app\publish\
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://*"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
    ports:
      - "4000:80"
    networks:
      authoring-api-net:
        aliases:
          - ${NETCOREAPP_HOST}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.netcoreapp-secure.entrypoints=websecure"
      - "traefik.http.routers.netcoreapp-secure.rule=Host(`${NETCOREAPP_HOST}`)"
      - "traefik.http.routers.netcoreapp-secure.tls=true"